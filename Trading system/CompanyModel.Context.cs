//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trading_system
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Commercial_CompanyEntities : DbContext
    {
        public Commercial_CompanyEntities()
            : base("name=Commercial_CompanyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> Add_Client(Nullable<int> cID, string cName, string cPhone, string cFax, string cMob, string cMail, string cWebsite)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("CName", cName) :
                new ObjectParameter("CName", typeof(string));
    
            var cPhoneParameter = cPhone != null ?
                new ObjectParameter("CPhone", cPhone) :
                new ObjectParameter("CPhone", typeof(string));
    
            var cFaxParameter = cFax != null ?
                new ObjectParameter("CFax", cFax) :
                new ObjectParameter("CFax", typeof(string));
    
            var cMobParameter = cMob != null ?
                new ObjectParameter("CMob", cMob) :
                new ObjectParameter("CMob", typeof(string));
    
            var cMailParameter = cMail != null ?
                new ObjectParameter("CMail", cMail) :
                new ObjectParameter("CMail", typeof(string));
    
            var cWebsiteParameter = cWebsite != null ?
                new ObjectParameter("CWebsite", cWebsite) :
                new ObjectParameter("CWebsite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Client", cIDParameter, cNameParameter, cPhoneParameter, cFaxParameter, cMobParameter, cMailParameter, cWebsiteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_I_Measuring_Unit(Nullable<int> iCode, string iMU)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var iMUParameter = iMU != null ?
                new ObjectParameter("IMU", iMU) :
                new ObjectParameter("IMU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_I_Measuring_Unit", iCodeParameter, iMUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Item(Nullable<int> iCode, string iName, string iMU)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var iNameParameter = iName != null ?
                new ObjectParameter("IName", iName) :
                new ObjectParameter("IName", typeof(string));
    
            var iMUParameter = iMU != null ?
                new ObjectParameter("IMU", iMU) :
                new ObjectParameter("IMU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Item", iCodeParameter, iNameParameter, iMUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Release_Permission(Nullable<int> pnum, Nullable<System.DateTime> pdate, Nullable<int> cid, Nullable<int> stid)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var pdateParameter = pdate.HasValue ?
                new ObjectParameter("Pdate", pdate) :
                new ObjectParameter("Pdate", typeof(System.DateTime));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("Cid", cid) :
                new ObjectParameter("Cid", typeof(int));
    
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Release_Permission", pnumParameter, pdateParameter, cidParameter, stidParameter);
        }
    
        public virtual int Add_Release_Permission_Item(Nullable<int> pnum, Nullable<int> icode, Nullable<int> qty, Nullable<int> sPNum)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var icodeParameter = icode.HasValue ?
                new ObjectParameter("Icode", icode) :
                new ObjectParameter("Icode", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var sPNumParameter = sPNum.HasValue ?
                new ObjectParameter("SPNum", sPNum) :
                new ObjectParameter("SPNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Release_Permission_Item", pnumParameter, icodeParameter, qtyParameter, sPNumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Store(Nullable<int> sID, string sName, string sAddress, string sKeaper)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var sAddressParameter = sAddress != null ?
                new ObjectParameter("SAddress", sAddress) :
                new ObjectParameter("SAddress", typeof(string));
    
            var sKeaperParameter = sKeaper != null ?
                new ObjectParameter("SKeaper", sKeaper) :
                new ObjectParameter("SKeaper", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Store", sIDParameter, sNameParameter, sAddressParameter, sKeaperParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Supplier(Nullable<int> sID, string sName, string sPhone, string sFax, string sMob, string sMail, string sWebsite)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var sPhoneParameter = sPhone != null ?
                new ObjectParameter("SPhone", sPhone) :
                new ObjectParameter("SPhone", typeof(string));
    
            var sFaxParameter = sFax != null ?
                new ObjectParameter("SFax", sFax) :
                new ObjectParameter("SFax", typeof(string));
    
            var sMobParameter = sMob != null ?
                new ObjectParameter("SMob", sMob) :
                new ObjectParameter("SMob", typeof(string));
    
            var sMailParameter = sMail != null ?
                new ObjectParameter("SMail", sMail) :
                new ObjectParameter("SMail", typeof(string));
    
            var sWebsiteParameter = sWebsite != null ?
                new ObjectParameter("SWebsite", sWebsite) :
                new ObjectParameter("SWebsite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Supplier", sIDParameter, sNameParameter, sPhoneParameter, sFaxParameter, sMobParameter, sMailParameter, sWebsiteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Add_Supply_Permission(Nullable<int> pnum, Nullable<System.DateTime> pdate, Nullable<int> sid, Nullable<int> stid, Nullable<int> icode, Nullable<int> qty, Nullable<System.DateTime> prod, Nullable<int> eXp)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var pdateParameter = pdate.HasValue ?
                new ObjectParameter("Pdate", pdate) :
                new ObjectParameter("Pdate", typeof(System.DateTime));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            var icodeParameter = icode.HasValue ?
                new ObjectParameter("Icode", icode) :
                new ObjectParameter("Icode", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var prodParameter = prod.HasValue ?
                new ObjectParameter("Prod", prod) :
                new ObjectParameter("Prod", typeof(System.DateTime));
    
            var eXpParameter = eXp.HasValue ?
                new ObjectParameter("EXp", eXp) :
                new ObjectParameter("EXp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Add_Supply_Permission", pnumParameter, pdateParameter, sidParameter, stidParameter, icodeParameter, qtyParameter, prodParameter, eXpParameter);
        }
    
        public virtual int Add_Supply_Permission_Item(Nullable<int> pnum, Nullable<int> icode, Nullable<int> qty, Nullable<System.DateTime> prod, Nullable<int> eXp)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var icodeParameter = icode.HasValue ?
                new ObjectParameter("Icode", icode) :
                new ObjectParameter("Icode", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var prodParameter = prod.HasValue ?
                new ObjectParameter("Prod", prod) :
                new ObjectParameter("Prod", typeof(System.DateTime));
    
            var eXpParameter = eXp.HasValue ?
                new ObjectParameter("EXp", eXp) :
                new ObjectParameter("EXp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Supply_Permission_Item", pnumParameter, icodeParameter, qtyParameter, prodParameter, eXpParameter);
        }
    
        public virtual int CheckQuantity(Nullable<int> stC, Nullable<int> icodeC, Nullable<int> sPNUMC)
        {
            var stCParameter = stC.HasValue ?
                new ObjectParameter("StC", stC) :
                new ObjectParameter("StC", typeof(int));
    
            var icodeCParameter = icodeC.HasValue ?
                new ObjectParameter("IcodeC", icodeC) :
                new ObjectParameter("IcodeC", typeof(int));
    
            var sPNUMCParameter = sPNUMC.HasValue ?
                new ObjectParameter("SPNUMC", sPNUMC) :
                new ObjectParameter("SPNUMC", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckQuantity", stCParameter, icodeCParameter, sPNUMCParameter);
        }
    
        public virtual int Delete_I_M_Unit(Nullable<int> iCode, string iMU)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var iMUParameter = iMU != null ?
                new ObjectParameter("IMU", iMU) :
                new ObjectParameter("IMU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_I_M_Unit", iCodeParameter, iMUParameter);
        }
    
        public virtual ObjectResult<Display_Clients_Result> Display_Clients(Nullable<int> cID)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Clients_Result>("Display_Clients", cIDParameter);
        }
    
        public virtual ObjectResult<Display_I_M_Unit_Result> Display_I_M_Unit(Nullable<int> iCode)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_I_M_Unit_Result>("Display_I_M_Unit", iCodeParameter);
        }
    
        public virtual ObjectResult<Display_Items_Result> Display_Items(Nullable<int> iCode)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Items_Result>("Display_Items", iCodeParameter);
        }
    
        public virtual ObjectResult<Display_Release_Permission_Items_Result> Display_Release_Permission_Items(Nullable<int> pnum)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Release_Permission_Items_Result>("Display_Release_Permission_Items", pnumParameter);
        }
    
        public virtual ObjectResult<Display_Release_Permissions_Result> Display_Release_Permissions(Nullable<int> pnum)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Release_Permissions_Result>("Display_Release_Permissions", pnumParameter);
        }
    
        public virtual ObjectResult<Display_Store_Items_Result> Display_Store_Items(Nullable<int> sID)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Store_Items_Result>("Display_Store_Items", sIDParameter);
        }
    
        public virtual ObjectResult<Display_Stores_Result> Display_Stores(Nullable<int> sID)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Stores_Result>("Display_Stores", sIDParameter);
        }
    
        public virtual ObjectResult<Display_Suppliers_Result> Display_Suppliers(Nullable<int> sID)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Suppliers_Result>("Display_Suppliers", sIDParameter);
        }
    
        public virtual ObjectResult<Display_Supply_Permission_Items_Result> Display_Supply_Permission_Items(Nullable<int> pnum)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Supply_Permission_Items_Result>("Display_Supply_Permission_Items", pnumParameter);
        }
    
        public virtual ObjectResult<Display_Supply_Permissions_Result> Display_Supply_Permissions(Nullable<int> pnum)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Display_Supply_Permissions_Result>("Display_Supply_Permissions", pnumParameter);
        }
    
        public virtual int Edit_Client(Nullable<int> cID, string cName, string cPhone, string cFax, string cMob, string cMail, string cWebsite)
        {
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("CName", cName) :
                new ObjectParameter("CName", typeof(string));
    
            var cPhoneParameter = cPhone != null ?
                new ObjectParameter("CPhone", cPhone) :
                new ObjectParameter("CPhone", typeof(string));
    
            var cFaxParameter = cFax != null ?
                new ObjectParameter("CFax", cFax) :
                new ObjectParameter("CFax", typeof(string));
    
            var cMobParameter = cMob != null ?
                new ObjectParameter("CMob", cMob) :
                new ObjectParameter("CMob", typeof(string));
    
            var cMailParameter = cMail != null ?
                new ObjectParameter("CMail", cMail) :
                new ObjectParameter("CMail", typeof(string));
    
            var cWebsiteParameter = cWebsite != null ?
                new ObjectParameter("CWebsite", cWebsite) :
                new ObjectParameter("CWebsite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Client", cIDParameter, cNameParameter, cPhoneParameter, cFaxParameter, cMobParameter, cMailParameter, cWebsiteParameter);
        }
    
        public virtual int Edit_Item(Nullable<int> iCode, string iName)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var iNameParameter = iName != null ?
                new ObjectParameter("IName", iName) :
                new ObjectParameter("IName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Item", iCodeParameter, iNameParameter);
        }
    
        public virtual int Edit_Release_Permission(Nullable<int> pnum, Nullable<System.DateTime> pdate, Nullable<int> cid, Nullable<int> stid)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var pdateParameter = pdate.HasValue ?
                new ObjectParameter("Pdate", pdate) :
                new ObjectParameter("Pdate", typeof(System.DateTime));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("Cid", cid) :
                new ObjectParameter("Cid", typeof(int));
    
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Release_Permission", pnumParameter, pdateParameter, cidParameter, stidParameter);
        }
    
        public virtual int Edit_Release_Permission_Item(Nullable<int> pNum, Nullable<int> iCode, Nullable<int> qty)
        {
            var pNumParameter = pNum.HasValue ?
                new ObjectParameter("PNum", pNum) :
                new ObjectParameter("PNum", typeof(int));
    
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Release_Permission_Item", pNumParameter, iCodeParameter, qtyParameter);
        }
    
        public virtual int Edit_Store(Nullable<int> sID, string sName, string sAddress, string sKeeper)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var sAddressParameter = sAddress != null ?
                new ObjectParameter("SAddress", sAddress) :
                new ObjectParameter("SAddress", typeof(string));
    
            var sKeeperParameter = sKeeper != null ?
                new ObjectParameter("SKeeper", sKeeper) :
                new ObjectParameter("SKeeper", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Store", sIDParameter, sNameParameter, sAddressParameter, sKeeperParameter);
        }
    
        public virtual int Edit_Supplier(Nullable<int> sID, string sName, string sPhone, string sFax, string sMob, string sMail, string sWebsite)
        {
            var sIDParameter = sID.HasValue ?
                new ObjectParameter("SID", sID) :
                new ObjectParameter("SID", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var sPhoneParameter = sPhone != null ?
                new ObjectParameter("SPhone", sPhone) :
                new ObjectParameter("SPhone", typeof(string));
    
            var sFaxParameter = sFax != null ?
                new ObjectParameter("SFax", sFax) :
                new ObjectParameter("SFax", typeof(string));
    
            var sMobParameter = sMob != null ?
                new ObjectParameter("SMob", sMob) :
                new ObjectParameter("SMob", typeof(string));
    
            var sMailParameter = sMail != null ?
                new ObjectParameter("SMail", sMail) :
                new ObjectParameter("SMail", typeof(string));
    
            var sWebsiteParameter = sWebsite != null ?
                new ObjectParameter("SWebsite", sWebsite) :
                new ObjectParameter("SWebsite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Supplier", sIDParameter, sNameParameter, sPhoneParameter, sFaxParameter, sMobParameter, sMailParameter, sWebsiteParameter);
        }
    
        public virtual int Edit_Supply_Permission(Nullable<int> pnum, Nullable<System.DateTime> pdate, Nullable<int> sid, Nullable<int> stid)
        {
            var pnumParameter = pnum.HasValue ?
                new ObjectParameter("Pnum", pnum) :
                new ObjectParameter("Pnum", typeof(int));
    
            var pdateParameter = pdate.HasValue ?
                new ObjectParameter("Pdate", pdate) :
                new ObjectParameter("Pdate", typeof(System.DateTime));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Supply_Permission", pnumParameter, pdateParameter, sidParameter, stidParameter);
        }
    
        public virtual int Edit_Supply_Permission_Item(Nullable<int> pNum, Nullable<int> iCode, Nullable<int> qty, Nullable<System.DateTime> prod, Nullable<int> eXp)
        {
            var pNumParameter = pNum.HasValue ?
                new ObjectParameter("PNum", pNum) :
                new ObjectParameter("PNum", typeof(int));
    
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var prodParameter = prod.HasValue ?
                new ObjectParameter("Prod", prod) :
                new ObjectParameter("Prod", typeof(System.DateTime));
    
            var eXpParameter = eXp.HasValue ?
                new ObjectParameter("EXp", eXp) :
                new ObjectParameter("EXp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_Supply_Permission_Item", pNumParameter, iCodeParameter, qtyParameter, prodParameter, eXpParameter);
        }
    
        public virtual ObjectResult<ItemReport2_Result> ItemReport2(Nullable<int> iCode, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemReport2_Result>("ItemReport2", iCodeParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ItemsInStores_Result> ItemsInStores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemsInStores_Result>("ItemsInStores");
        }
    
        public virtual ObjectResult<ItemsNearingExpiration_Result> ItemsNearingExpiration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemsNearingExpiration_Result>("ItemsNearingExpiration");
        }
    
        public virtual ObjectResult<ItemsWeHaveForALongTime_Result> ItemsWeHaveForALongTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ItemsWeHaveForALongTime_Result>("ItemsWeHaveForALongTime");
        }
    
        public virtual int MoveItems(Nullable<int> fromSt, Nullable<int> toSt, Nullable<int> iCode, Nullable<int> qTY, Nullable<int> sPNum)
        {
            var fromStParameter = fromSt.HasValue ?
                new ObjectParameter("FromSt", fromSt) :
                new ObjectParameter("FromSt", typeof(int));
    
            var toStParameter = toSt.HasValue ?
                new ObjectParameter("ToSt", toSt) :
                new ObjectParameter("ToSt", typeof(int));
    
            var iCodeParameter = iCode.HasValue ?
                new ObjectParameter("ICode", iCode) :
                new ObjectParameter("ICode", typeof(int));
    
            var qTYParameter = qTY.HasValue ?
                new ObjectParameter("QTY", qTY) :
                new ObjectParameter("QTY", typeof(int));
    
            var sPNumParameter = sPNum.HasValue ?
                new ObjectParameter("SPNum", sPNum) :
                new ObjectParameter("SPNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoveItems", fromStParameter, toStParameter, iCodeParameter, qTYParameter, sPNumParameter);
        }
    
        public virtual ObjectResult<Store_Details_Result> Store_Details(Nullable<int> stID)
        {
            var stIDParameter = stID.HasValue ?
                new ObjectParameter("StID", stID) :
                new ObjectParameter("StID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Store_Details_Result>("Store_Details", stIDParameter);
        }
    
        public virtual ObjectResult<StoreReport1_Result> StoreReport1(Nullable<int> stID, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var stIDParameter = stID.HasValue ?
                new ObjectParameter("StID", stID) :
                new ObjectParameter("StID", typeof(int));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StoreReport1_Result>("StoreReport1", stIDParameter, fromParameter, toParameter);
        }
    }
}
